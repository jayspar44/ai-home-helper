name: Deploy to Development

# Trigger on pushes to the develop branch
on:
  push:
    branches:
      - develop

# Required permissions for Workload Identity Federation
permissions:
  id-token: write      # Required to request OIDC token
  contents: read       # Required to checkout code

jobs:
  deploy-dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    environment: development  # Uses GitHub Environment for tracking and secrets

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if this is a sync commit
        id: check-sync
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" =~ ^sync: ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "ℹ️  This is a sync commit - deployment will be skipped"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "✓ This is a regular commit - proceeding with deployment"
          fi

      - name: Skip deployment for sync commits
        if: steps.check-sync.outputs.skip == 'true'
        run: |
          echo "## Development Deployment Skipped ⏭️" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** This is a sync commit from \`main\` → \`develop\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit Message:** \`$(git log -1 --pretty=%B | head -1)\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No deployment needed - this code was already deployed to production." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch Status:** \`develop\` is now aligned with \`main\`" >> $GITHUB_STEP_SUMMARY

      - name: Authenticate to Google Cloud
        if: steps.check-sync.outputs.skip != 'true'
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Cloud SDK
        if: steps.check-sync.outputs.skip != 'true'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to App Engine Dev via Cloud Build
        if: steps.check-sync.outputs.skip != 'true'
        id: deploy
        run: |
          echo "Deploying to dev environment using Cloud Build..."
          echo "Project: ${{ secrets.GCP_PROJECT_ID }}"
          echo "Service: dev"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Using optimized cloudbuild.yaml (caching + E2_HIGHCPU_8)"

          # Trigger Cloud Build with optimized configuration
          # This uses the same pipeline as manual 'npm run gcp:deploy:dev'
          # Benefits: tar+gzip caching, parallel operations, faster machine type
          gcloud builds submit \
            --config=cloudbuild.yaml \
            --project=${{ secrets.GCP_PROJECT_ID }} \
            --substitutions=_ENV=dev,_SERVICE_NAME=dev

          echo "✓ Cloud Build deployment complete!"

      - name: Get deployment URL
        if: steps.check-sync.outputs.skip != 'true'
        id: url
        run: |
          # Get the project ID from gcloud (already authenticated)
          PROJECT_ID=$(gcloud config get-value project)

          # Construct the dev service URL
          DEV_URL="https://dev-dot-${PROJECT_ID}.uc.r.appspot.com"
          echo "url=${DEV_URL}" >> $GITHUB_OUTPUT
          echo "Dev URL: ${DEV_URL}"

      - name: Post deployment summary
        if: steps.check-sync.outputs.skip != 'true'
        run: |
          echo "## Development Deployment Complete! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** Development" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** dev" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed by:** @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.url.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** Allow a few minutes for the deployment to become active (cold start)." >> $GITHUB_STEP_SUMMARY
