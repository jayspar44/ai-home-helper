name: Sync develop with main

# Automatically sync develop branch after production releases
# This keeps branches aligned without manual intervention
on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger if needed

permissions:
  contents: write  # Required to push to develop branch

jobs:
  sync:
    name: Merge main into develop
    runs-on: ubuntu-latest

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0  # Need full history for merge
          token: ${{ secrets.WORKFLOW_SYNC_TOKEN }}

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if sync is needed
        id: check-sync
        run: |
          git fetch origin main

          # Check if develop is behind main
          BEHIND=$(git rev-list --count HEAD..origin/main)

          if [ "$BEHIND" -eq 0 ]; then
            echo "needed=false" >> $GITHUB_OUTPUT
            echo "ℹ️  develop is already up-to-date with main - no sync needed"
          else
            echo "needed=true" >> $GITHUB_OUTPUT
            echo "✓ develop is behind main by $BEHIND commit(s) - sync needed"
          fi

      - name: Merge main into develop
        if: steps.check-sync.outputs.needed == 'true'
        id: merge
        run: |
          echo "Syncing develop with main after production release..."

          # Use --no-ff to force a merge commit (prevents fast-forward)
          # This ensures our custom commit message is used
          git merge origin/main --no-ff -m "sync: Align develop with main after production release"

          echo "merge_done=true" >> $GITHUB_OUTPUT
          echo "✓ Merge completed"

      - name: Push changes
        if: steps.check-sync.outputs.needed == 'true' && steps.merge.outputs.merge_done == 'true'
        run: |
          git push origin develop
          echo "✓ Successfully synced develop with main"

      - name: Skip sync
        if: steps.check-sync.outputs.needed == 'false'
        run: |
          echo "## Branch Sync Skipped ⏭️" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** \`develop\` is already up-to-date with \`main\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** No action needed - branches are already synchronized" >> $GITHUB_STEP_SUMMARY

      - name: Post sync summary
        if: steps.check-sync.outputs.needed == 'true'
        run: |
          echo "## Branch Sync Complete! 🔄" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Action:** Merged \`main\` → \`develop\`" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** Keep branches aligned after production release" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`sync: Align develop with main after production release\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** This sync commit will NOT trigger dev deployment (detected by \`deploy-dev.yml\`)." >> $GITHUB_STEP_SUMMARY
